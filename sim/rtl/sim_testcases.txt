## A list of test cases, with the following format:
##
## TestCaseName TestConfig MemFile ConsoleFile [Parameter=Value pairs]*
## ------------|----------|-------|-----------|--------------------------
##
## Test configs start with either AX or WB, for AXI or Wishbone support
## respectively.  An optional [L] may follow the AX to use the AXI-Lite core,
## or [B] may follow the WB to use the ZipBones core.  There are several canned
## configs:
##
## AXLASM, AXASM, WBBASM, WBASM:
##	All options off, bare minimum CPU configuration (doesn't support shifts)
##
## AXLTRAP, AXTRAP, WBTRAP, WBBTRAP:
##	User mode enabled, supports shifts and locks but no multiplies or
##	divides, and simplest memory models only
##
## AXLMIN, AXMIN, WBMIN, WBBMIN:
##	Full CPU functionality, supports all instructions, yet all
##	optimizations are turned off.  Simplest memory models only.  No
##	pipelining.
##
## AXLPIPE, AXPIPE, WBPIPE, WBBPIPE:
##	A pipelined version of AXMIN/WBMIN.  Memory models are pipelined
##	models, but still without caches or caching.
##
## AXCACHE, WBCACHE, WBBCACHE:
##	Adding a high speed cache to the pipelined models above.  There is no
##	AXI-Lite support (currently) for any of the cache configurations.
##
## AXLPWR, WBLPWR, WBBLPWR:
##	Low power configuration, still using the cache.  Unused values are now
##	clipped to zero.  The CPU will now also turn its clock off when waiting
##	for an interrupt.  As with the *CACHE option above, there is no AXI-Lite
##	equivalent to this test case.
##
##
## Not all parameters are controlled via the test case configuration name listed
## above.  Chief among these is the bus width parameter.  For this reason,
## configuration lines may end with a list of parameter value pairs.
##
## VCD generation is, by default, turned off--to keep multiple tests from
## stepping on the same VCD file if they are all run at once.  Turning on
## VCD generation requires adding parameters, such as:
##    "DUMP_TO_VCD=1 VCD_FILE=\"dump.vcd\""
##
## To succeed, a test case must place either PASS or SUCCESS in its last line.
##
## TestCaseName TestConfig MemFile ConsoleFile [Parameter=Value pairs]*
## ------------|----------|-------|-----------|--------------------------
axlmincheck    AXLMIN cputest.hex axlmin-out.txt	# DUMP_TO_VCD=1 VCD_FILE="trace.vcd"
axmincheck     AXMIN  cputest.hex axmin-out.txt
wbbmincheck    WBBMIN cputest.hex wbbmin-out.txt
wbmincheck     WBMIN  cputest.hex wbmin-out.txt		# DUMP_TO_VCD=1 VCD_FILE="wbmintrace.vcd"
##
axlminhello   AXLMIN  hellostep.hex axlminhlout.txt
axminhello    AXMIN   hellostep.hex axminhl-out.txt
wbbminhello   WBBMIN  hellostep.hex wbbminhl-out.txt
wbminhello    WBMIN   hellostep.hex wbminhl-out.txt
##
axlmincklock   AXLMIN lockcheck.hex axlminlk-out.txt
axmincklock    AXMIN  lockcheck.hex axminlk-out.txt
wbbmincklock   WBBMIN lockcheck.hex wbbminlk-out.txt
wbmincklock    WBMIN  lockcheck.hex wbminlk-out.txt
##
# axlminchk64    AXLMIN cputest64.hex axlmin64-out.txt		BUS_WIDTH=64
# axminchk64     AXMIN  cputest64.hex axmin64-out.txt		BUS_WIDTH=64
# wbbminchk64    WBBMIN cputest64.hex wbbmin64-out.txt		BUS_WIDTH=64
# wbminchk64     WBMIN  cputest64.hex wbmin64-out.txt		BUS_WIDTH=64
##
axlpipecheck   AXLPIPE cputest.hex axlpipe-out.txt
axpipecheck    AXPIPE  cputest.hex axpipe-out.txt
wbbpipecheck   WBBPIPE cputest.hex wbbpipe-out.txt
wbpipecheck    WBPIPE  cputest.hex wbpipe-out.txt
##
axlpipehello   AXLPIPE hellostep.hex axlpipehl-out.txt
axpipehello    AXPIPE  hellostep.hex axpipehl-out.txt
wbbpipehello   WBBPIPE hellostep.hex wbbpipehl-out.txt
wbpipehello    WBPIPE  hellostep.hex wbpipehl-out.txt
##
axlpipecklock  AXLPIPE lockcheck.hex axlpiplk-out.txt
axpipecklock   AXPIPE  lockcheck.hex axpiplk-out.txt
wbbpipecklock  WBBPIPE lockcheck.hex wbbpiplk-out.txt
wbpipecklock   WBPIPE  lockcheck.hex wbpiplk-out.txt
##
# axlpipechk64   AXLPIPE cputest64.hex axlpip64-out.txt	BUS_WIDTH=64
# axpipechk64    AXPIPE  cputest64.hex axpip64-out.txt	BUS_WIDTH=64
# wbbpipechk64   WBBPIPE cputest64.hex wbbpip64-out.txt	BUS_WIDTH=64
# wbpipechk64    WBPIPE  cputest64.hex wbpip64-out.txt	BUS_WIDTH=64
##
axcachecheck   AXCACHE  cputest.hex axcache-out.txt
wbbcachecheck  WBBCACHE cputest.hex wbbcache-out.txt
wbcachecheck   WBCACHE  cputest.hex wbcache-out.txt
##
axcachehello   AXCACHE  hellostep.hex axcachehl-out.txt
wbbcachehello  WBBCACHE hellostep.hex wbbcachehl-out.txt
wbcachehello   WBCACHE  hellostep.hex wbcachehl-out.txt
##
axcachecklock  AXCACHE  lockcheck.hex axcachlk-out.txt
wbbcachecklock WBBCACHE lockcheck.hex wbbcachlk-out.txt
wbcachecklock  WBCACHE  lockcheck.hex wbcachlk-out.txt
##
# axcachechk64   AXCACHE  cputest64.hex axcach64-out.txt	BUS_WIDTH=64
# wbbcachechk64  WBBCACHE cputest64.hex wbbcach64-out.txt	BUS_WIDTH=64
# wbcachechk64   WBCACHE  cputest64.hex wbcach64-out.txt	BUS_WIDTH=64
##
axlpwrcheck    AXLPWR  cputest.hex axlpwr-out.txt
wbblpwrcheck   WBBLPWR cputest.hex wblpwr-out.txt
wblpwrcheck    WBLPWR  cputest.hex wbblpwr-out.txt
##
axlpwrhello   AXLPWR  hello.hex axlpwrhl-out.txt
wbblpwrhello  WBBLPWR hello.hex wbblpwrhl-out.txt
wblpwrhello   WBLPWR  hello.hex wblpwrhl-out.txt
##
axlpwrcklock   AXLPWR  lockcheck.hex axlpwrlk-out.txt
wbblpwrcklock  WBBLPWR lockcheck.hex wbblpwrlk-out.txt
wblpwrcklock   WBLPWR  lockcheck.hex wblpwrlk-out.txt
##
